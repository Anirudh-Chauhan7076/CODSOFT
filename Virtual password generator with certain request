import random
import string
import tkinter as tk
from tkinter import messagebox

def generate_password():
    try:
        length = int(entry_length.get())
        symbol_count = entry_symbols.get()
        char_count = entry_chars.get()
        digit_count = entry_digits.get()

        symbol_count = int(symbol_count) if symbol_count else 0
        char_count = int(char_count) if char_count else 0
        digit_count = int(digit_count) if digit_count else 0

        total_selected = symbol_count + char_count + digit_count

        if total_selected > length:
            messagebox.showerror("Invalid Input", "Sum of symbol, character, and digit counts exceeds total length!")
            return

        remaining_length = length - total_selected

        characters = string.ascii_letters
        digits = string.digits
        symbols = string.punctuation

        password = []

        flag_symbols = symbol_count > 0
        flag_chars = char_count > 0
        flag_digits = digit_count > 0

        if not flag_symbols and not flag_chars and not flag_digits:
            password.extend(random.choice(characters + digits + symbols) for _ in range(length))

        elif flag_symbols and not flag_chars and not flag_digits:
            password.extend(random.choice(symbols) for _ in range(symbol_count))
            password.extend(random.choice(characters + digits) for _ in range(remaining_length))

        elif not flag_symbols and flag_chars and not flag_digits:
            password.extend(random.choice(characters) for _ in range(char_count))
            password.extend(random.choice(symbols + digits) for _ in range(remaining_length))

        elif not flag_symbols and not flag_chars and flag_digits:
            password.extend(random.choice(digits) for _ in range(digit_count))
            password.extend(random.choice(characters + symbols) for _ in range(remaining_length))

        elif flag_symbols and flag_chars and not flag_digits:
            password.extend(random.choice(symbols) for _ in range(symbol_count))
            password.extend(random.choice(characters) for _ in range(char_count))
            password.extend(random.choice(digits) for _ in range(remaining_length))

        elif flag_symbols and not flag_chars and flag_digits:
            password.extend(random.choice(symbols) for _ in range(symbol_count))
            password.extend(random.choice(digits) for _ in range(digit_count))
            password.extend(random.choice(characters) for _ in range(remaining_length))

        elif flag_symbols and flag_chars and flag_digits:
            password.extend(random.choice(symbols) for _ in range(symbol_count))
            password.extend(random.choice(characters) for _ in range(char_count))
            password.extend(random.choice(digits) for _ in range(digit_count))
            remaining_length = length - len(password)
            password.extend(random.choice(symbols + characters + digits) for _ in range(remaining_length))

        else:
            password.extend(random.choice(symbols) for _ in range(symbol_count))
            password.extend(random.choice(characters) for _ in range(char_count))
            password.extend(random.choice(digits) for _ in range(digit_count))
        random.shuffle(password)

        password = ''.join(password)

        entry_password.delete(0, tk.END)
        entry_password.insert(0, password)

    except ValueError:
        messagebox.showerror("Invalid Input", "Please enter valid numbers for password length and counts.")

def copy_to_clipboard():
    password = entry_password.get()
    if password:
        window.clipboard_clear()
        window.clipboard_append(password)
        messagebox.showinfo("Copied", "Password copied to clipboard!")
    else:
        messagebox.showerror("Error", "No password to copy.")

window = tk.Tk()
window.title("Password Generator")
window.geometry("400x450")
window.configure(bg="#f2f2f2")

label_title = tk.Label(window, text="Password Generator", font=("Comic Sans MS", 16, "bold"), bg="#f2f2f2", fg="#333333")
label_title.pack(pady=10)

frame = tk.Frame(window, bg="#f2f2f2")
frame.pack(pady=10)

label_length = tk.Label(frame, text="Password Length:", font=("Comic Sans MS", 12), bg="#f2f2f2", fg="#333333")
label_length.grid(row=0, column=0, padx=10, pady=10)

entry_length = tk.Entry(frame, font=("Comic Sans MS", 12), width=10)
entry_length.grid(row=0, column=1, padx=10, pady=10)

label_symbols = tk.Label(frame, text="Number of Symbols:", font=("Comic Sans MS", 12), bg="#f2f2f2", fg="#333333")
label_symbols.grid(row=1, column=0, padx=10, pady=10)

entry_symbols = tk.Entry(frame, font=("Comic Sans MS", 12), width=10)
entry_symbols.grid(row=1, column=1, padx=10, pady=10)

label_chars = tk.Label(frame, text="Number of Letters:", font=("Comic Sans MS", 12), bg="#f2f2f2", fg="#333333")
label_chars.grid(row=2, column=0, padx=10, pady=10)

entry_chars = tk.Entry(frame, font=("Comic Sans MS", 12), width=10)
entry_chars.grid(row=2, column=1, padx=10, pady=10)

label_digits = tk.Label(frame, text="Number of Digits:", font=("Comic Sans MS", 12), bg="#f2f2f2", fg="#333333")
label_digits.grid(row=3, column=0, padx=10, pady=10)

entry_digits = tk.Entry(frame, font=("Comic Sans MS", 12), width=10)
entry_digits.grid(row=3, column=1, padx=10, pady=10)

button_generate = tk.Button(frame, text="Generate Password", font=("Comic Sans MS", 12), bg="#4CAF50", fg="white", command=generate_password)
button_generate.grid(row=4, column=0, columnspan=2, pady=10)

label_password = tk.Label(frame, text="Generated Password:", font=("Comic Sans MS", 12), bg="#f2f2f2", fg="#333333")
label_password.grid(row=5, column=0, padx=10, pady=10)

entry_password = tk.Entry(frame, font=("Comic Sans MS", 12), width=25)
entry_password.grid(row=5, column=1, padx=10, pady=10)

button_copy = tk.Button(window, text="Copy to Clipboard", font=("Comic Sans MS", 12), bg="#2196F3", fg="white", command=copy_to_clipboard)
button_copy.pack(pady=10)

window.mainloop()
